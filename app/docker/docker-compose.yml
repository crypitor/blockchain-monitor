version: '3.7'

services:
  api:
    image: crypitor/crypitor-api:${VERSION:-latest}
    env_file:
      - .env
    ports:
      - ${SERVER_PORT:-3000}:${SERVER_PORT:-3000}
    networks:
      crypitor-network:
        aliases:
          - api
    depends_on:
      mongo:
        condition: service_healthy
      kafka:
        condition: service_healthy
    extra_hosts:
      - 'host.docker.internal:host-gateway'
  monitor:
    image: crypitor/crypitor-monitor:${VERSION:-latest}
    env_file:
      - .env
    networks:
      crypitor-network:
        aliases:
          - monitor
    depends_on:
      mongo:
        condition: service_healthy
      kafka:
        condition: service_healthy
    extra_hosts:
      - 'host.docker.internal:host-gateway'
  worker:
    image: crypitor/crypitor-worker:${VERSION:-latest}
    env_file:
      - .env
    networks:
      crypitor-network:
        aliases:
          - worker
    depends_on:
      mongo:
        condition: service_healthy
      kafka:
        condition: service_healthy
    extra_hosts:
      - 'host.docker.internal:host-gateway'
  mongo:
    extends:
      file: docker-compose-deps.yml
      service: mongo
    restart: always
    networks:
      crypitor-network:
        aliases:
          - mongo

  zookeeper:
    extends:
      file: docker-compose-deps.yml
      service: zookeeper
    restart: always
    networks:
      crypitor-network:
        aliases:
          - zookeeper

  kafka:
    extends:
      file: docker-compose-deps.yml
      service: kafka
    restart: always
    depends_on:
      zookeeper:
        condition: service_healthy
    networks:
      crypitor-network:
        aliases:
          - kafka

  kafka-ui:
    extends:
      file: docker-compose-deps.yml
      service: kafka-ui
    restart: always
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      crypitor-network:
        aliases:
          - kafka-ui

  postgres:
    extends:
      file: docker-compose-wh.yml
      service: postgres
    networks:
      crypitor-network:
        aliases:
          - postgres

  webhook-migrate:
    extends:
      file: docker-compose-wh.yml
      service: webhook-migrate
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      crypitor-network:
        aliases:
          - webhook-migrate

  webhook-worker:
    extends:
      file: docker-compose-wh.yml
      service: webhook-worker
    depends_on:
      postgres:
        condition: service_healthy
      webhook-migrate:
        condition: service_completed_successfully
    networks:
      crypitor-network:
        aliases:
          - webhook-worker

  webhook-server:
    extends:
      file: docker-compose-wh.yml
      service: webhook-server
    depends_on:
      postgres:
        condition: service_healthy
      webhook-migrate:
        condition: service_completed_successfully
    networks:
      crypitor-network:
        aliases:
          - webhook-server

networks:
  crypitor-network:
volumes:
  pgdata:
  data:
